---
openapi: 3.0.1
info:
  title: API documentation for users
  version: v1
paths:
  "/api/v1/users/{id}":
    get:
      summary: Retrieve a user
      tags:
      - Users
      description: Get the user information.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: User found
          examples:
            application/json:
              email: teodora@streich.org
        '404':
          description: User not found
          examples:
            application/json:
              description: Not found
              details: Couldn't find User with 'id'=0
              error_code: 4000
              http_status: 404
    put:
      summary: Update a user
      tags:
      - Users
      description: Update a user.
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: User updated
          examples:
            application/json:
              email: steven@schimmel.net
        '401':
          description: Unauthorized
          examples:
            application/json:
              description: User can not be deleted or updated due to unauthorized
              error_code: 4011
              http_status: 401
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
                required:
                - user
    delete:
      summary: Delete a user
      tags:
      - Users
      description: Delete a user.
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: User deleted
        '401':
          description: Unauthorized
  "/api/v1/users":
    post:
      summary: Create a user
      tags:
      - Users
      description: Create a user.
      parameters: []
      responses:
        '201':
          description: User created
          examples:
            application/json:
              email: portia.streich@harber.biz
        '422':
          description: Invalid parameters
          examples:
            application/json:
              description: Cannot create profile due to invalid paramater
              details:
              - is not an email
              error_code: 4022
              http_status: 422
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
                required:
                - user
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000/
components:
  securitySchemes:
    BearerAuth:
      type: apiKey
      name: Authorization
      in: header
