kind: pipeline
type: docker
name: training-api-drone

environment:
  DATABASE_URL: postgres://testuser:password123@postgres-service/training_test
  BUNDLE_PATH: /drone-pipeline/${DRONE_REPO}/ruby/bundle/vendor
  BUNDLE_CACHE_PATH: /drone-pipeline/${DRONE_REPO}/ruby/bundle/cache

steps:
- name: bundler setup
  image: ruby:3.0.2
  commands:
    - bundle install

- name: database setup
  image: ruby:3.0.2
  environment:
    RAILS_ENV: test
    DOMAIN:
      from_secret: DOMAIN
    SMTP_ADDRESS:
      from_secret: SMTP_ADDRESS 
    SMTP_ADDRESS:
      from_secret: SMTP_ADDRESS
    SMTP_PASSWORD:
      from_secret: SMTP_PASSWORD 
    SMTP_PORT:
      from_secret: SMTP_PORT 
    SMTP_USER_NAME:
      from_secret: SMTP_USER_NAME 
  commands: 
    - bundle exec rake db:create db:migrate --trace
  depends_on:
    - bundler setup

- name: Run tests
  image: ruby:3.0.2
  commands:
    - bundle exec rspec --format progress
  environment:
    DOMAIN:
      from_secret: DOMAIN
    SMTP_ADDRESS:
      from_secret: SMTP_ADDRESS 
    SMTP_ADDRESS:
      from_secret: SMTP_ADDRESS
    SMTP_PASSWORD:
      from_secret: SMTP_PASSWORD 
    SMTP_PORT:
      from_secret: SMTP_PORT 
    SMTP_USER_NAME:
      from_secret: SMTP_USER_NAME 
  depends_on:
    - database setup

- name: Run linter
  image: ruby:3.0.2
  commands:
    - bundle exec rubocop
  depends_on:
    - bundler setup

- name: deploy to Heroku
  image: ruby:3.0.2
  environment:
    HEROKU_API_KEY:
      from_secret: HEROKU_API_KEY
  commands:
    - git push https://heroku:$HEROKU_API_KEY@git.heroku.com/jv-training.git ${DRONE_BRANCH}:main
  depends_on:
    - Run linter
    - Run tests
  when:
    branch:
      - master
    status:
      - success
    event:
      - push


services: 
- name: postgres-service
  image: postgres:13.4
  environment:
    POSTGRES_USER: testuser
    POSTGRES_PASSWORD: password123
